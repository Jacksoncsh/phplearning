php对象的多态
类型的多态,和方法的多态
直接实例化一个字符串类型的对象
$str = 'Cat';
$cat1 = new $str;

__call魔术方法
当调用不存在的方法是,该模式魔术方法会被调用

__get __set
访问非公有的(protected,private)属性时会调用这两个方法

__clone
对象被克隆时调用

类的静态变量和静态方法
public static $变量;
public static function 方法名(){}
静态属性和方法是类所有的,是一个公共全局的属性和方法

类常量
const 常量
也是属于类全局
类常量不支持函数的返回值

单例模式
要求:
一个类全局一个对象,整个系统共用这个对象
特点:
私有的构造函数,防止在类外部实例化 new
私有的静态变量,用来全局存储这个类的实例
公开的静态方法,用来创建或者获取这个类本身的实例
私有的__clone方法
final修饰类,防止继承

抽象类和抽象方法
abstruct class Foo
{
	abstruct public function bar();
}
如果一个类包含抽象方法,则这个类必须是抽象类,抽象类内可以没有抽象方法
抽象方法不能方法体,权限修饰符不能是private
继承这个抽象类的子类,必须实现父类中的所有抽象方法,或者它本身也是一个抽象类
单继承的

接口 interface
interface 接口名
{
	public function 方法名();
}
接口内的方法都不能有方法体,权限修饰符必须是public
接口内不能有成员属性,但是可以由类常量
接口可以继承接口, 使用extends, 多继承,用","分隔
实现接口 implements
一个类可以实现多个接口
实现接口时,必须实现接口内所有的方法,或者这个类是一个抽象类

异常处理
Exception
trown来抛出异常, try...catch捕获异常
try {
	// 代码段
	throw new Exception('异常');
} catch (Exception $e) {
	// 异常处理,或者重新抛出异常
}
我们可以自定义异常, 继承顶级异常 Exception
异常可以嵌套的
